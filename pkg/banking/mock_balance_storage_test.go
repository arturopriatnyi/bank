// Code generated by mockery v2.20.0. DO NOT EDIT.

package banking

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockBalanceStorage is an autogenerated mock type for the BalanceStorage type
type MockBalanceStorage struct {
	mock.Mock
}

// Get provides a mock function with given fields: ctx, userID
func (_m *MockBalanceStorage) Get(ctx context.Context, userID int32) (Balance, error) {
	ret := _m.Called(ctx, userID)

	var r0 Balance
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int32) (Balance, error)); ok {
		return rf(ctx, userID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int32) Balance); ok {
		r0 = rf(ctx, userID)
	} else {
		r0 = ret.Get(0).(Balance)
	}

	if rf, ok := ret.Get(1).(func(context.Context, int32) error); ok {
		r1 = rf(ctx, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockBalanceStorage interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockBalanceStorage creates a new instance of MockBalanceStorage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockBalanceStorage(t mockConstructorTestingTNewMockBalanceStorage) *MockBalanceStorage {
	mock := &MockBalanceStorage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
